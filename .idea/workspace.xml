<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="002c0ed2-c1f7-47ef-8c7d-c801003f494d" name="Changes" comment="During refactoring I realized that one of my test which was a repeat of the first constructor test was redundant. Since I test all getters for the second constructor already. I removed it and found no loss in code coverage.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="JUnit5 Test Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2HzUi7QH0CNk5mI5BS2dkb46sRL" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
    "settings.editor.selected.configurable": "preferences.lookFeel"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="org.example" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.ColoursTest">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.Main" />
      <module name="CS3318_AO3" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ColoursTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="CS3318_AO3" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.ColoursTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ColoursTest.testBlueSegmentOfCombinedNumber" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="CS3318_AO3" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.ColoursTest" />
      <option name="METHOD_NAME" value="testBlueSegmentOfCombinedNumber" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.ColoursTest" />
        <item itemvalue="JUnit.ColoursTest.testBlueSegmentOfCombinedNumber" />
        <item itemvalue="Application.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="002c0ed2-c1f7-47ef-8c7d-c801003f494d" name="Changes" comment="" />
      <created>1669287531971</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1669287531971</updated>
    </task>
    <task id="LOCAL-00001" summary="An initial commit before a test has been created. This is simply the main and maven build.">
      <created>1669287771338</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1669287771338</updated>
    </task>
    <task id="LOCAL-00002" summary="An initial commit before a test has been created. This is simply the main and maven build.">
      <created>1669288242637</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1669288242637</updated>
    </task>
    <task id="LOCAL-00003" summary="A ColoursTest and MainTest class have been generated. within our test section.">
      <created>1669367718106</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1669367718106</updated>
    </task>
    <task id="LOCAL-00004" summary="A ColoursTest and MainTest class have been generated. within our test section.">
      <created>1669367864958</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1669367864958</updated>
    </task>
    <task id="LOCAL-00005" summary="Within coloursTest.java I have created a test to test whether the variables red, green and blue are the correct floating point numbers. It fails at this stage as it has no getters for red, green and blue.">
      <created>1669370398492</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1669370398492</updated>
    </task>
    <task id="LOCAL-00006" summary="I rewrote the test method createColourTest() it now uses assertTrue to find out if the boolean values are within the range of 0.0 and 1.0.">
      <created>1669394438229</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1669394438229</updated>
    </task>
    <task id="LOCAL-00007" summary="I rewrote the test method createColourTest() it now uses assertTrue to find out if the boolean values are within the range of 0.0 and 1.0.">
      <created>1669394508941</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1669394508941</updated>
    </task>
    <task id="LOCAL-00008" summary="After creating a Colour constructor for my Colour.java class with the parameters red, green, and blue. I coded getters which are used in the test class to make sure that the float values for the colours stay within range. This test passed after the previous one failing.">
      <created>1669478566201</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1669478566201</updated>
    </task>
    <task id="LOCAL-00009" summary="After creating a Colour constructor for my Colour.java class with the parameters red, green, and blue. I coded getters which are used in the test class to make sure that the float values for the colours stay within range. This test passed after the previous one failing.">
      <created>1669478618996</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1669478618996</updated>
    </task>
    <task id="LOCAL-00010" summary="I have created a new instance for the whole combined colour constructor that is yet to be created. A small test that checks if the floating point number representing the whole colour is within the appropriate range. It fails I must next develop and implementation to satisfy it.">
      <created>1669484691457</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1669484691457</updated>
    </task>
    <task id="LOCAL-00011" summary="I have created a new instance for the whole combined colour constructor that is yet to be created. A small test that checks if the floating point number representing the whole colour is within the appropriate range. It fails I must next develop and implementation to satisfy it.">
      <created>1669484708426</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1669484708426</updated>
    </task>
    <task id="LOCAL-00012" summary="I now test the second constructor verifying that it its parameter is hex and of the correct length. Whether the red, green and, blue values are appropriate. I am yet to construct the comparison function.">
      <created>1669506828776</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1669506828777</updated>
    </task>
    <task id="LOCAL-00013" summary="I create a map to store the rgb values which a represented by integers between 0 and 255. The floating point values multiplied by 255 give the rgb values. I tested this assuming the hashmap would not be empty, and it would have a collection of size 3.">
      <created>1669646248375</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1669646248375</updated>
    </task>
    <task id="LOCAL-00014" summary="All my tests passed, so I created red green and blue variables with in second constructor that allow me to compare colour objects. By taking breaking the hex up into its individual components red, green, and blue. I was able to get the int version and then divide by 255 since that is the maximum rgb value.&#10;This continued to use my previous tests. I went about refactoring.">
      <created>1669650438728</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1669650438728</updated>
    </task>
    <task id="LOCAL-00015" summary="A test for the equals operator has failed.&#10;This establishes whether objects are equal or not based on the values red, green, and blue.&#10;I will go about creating the equals overloader now.">
      <created>1669801292861</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1669801292861</updated>
    </task>
    <task id="LOCAL-00016" summary="Now my test passes as I created and equals Override to compare individual colours in my different instances. I will now refactor my code.">
      <created>1669802213938</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1669802213938</updated>
    </task>
    <task id="LOCAL-00017" summary="I have refactored my code to have the getters directly beneath my constructors. As logically they are used by my methods beneath them.">
      <created>1669802614979</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1669802614979</updated>
    </task>
    <task id="LOCAL-00018" summary="I refactored the file system so that there was no test file for Main as it wasn't necessary. Main is not tested since it is currently only calling the single RGBColour method.">
      <created>1669803222652</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1669803222652</updated>
    </task>
    <task id="LOCAL-00019" summary="I refactored teh comments in the Colour.java file as all tests pass with 100% code coverage of the Colour class. In my java docs I gave the input type.">
      <created>1669803508151</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1669803508151</updated>
    </task>
    <task id="LOCAL-00020" summary="I refactored my code so that in ColoursTest.java there was no tearDown() method. As it was not being used in the code. I also altered the comments for the setUp() method to include two instances.">
      <created>1669804137017</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1669804137017</updated>
    </task>
    <task id="LOCAL-00021" summary="During refactoring I realized that one of my test which was a repeat of the first constructor test was redundant. Since I test all getters for the second constructor already. I removed it and found no loss in code coverage.">
      <created>1669805848730</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1669805848730</updated>
    </task>
    <option name="localTasksCounter" value="22" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="CS3318_AO3/master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="HEAD" />
                </option>
              </RecentGroup>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="CS3318_AO3/master" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="An initial commit before a test has been created. This is simply the main and maven build." />
    <MESSAGE value="A ColoursTest and MainTest class have been generated. within our test section." />
    <MESSAGE value="Within coloursTest.java I have created a test to test whether the variables red, green and blue are the correct floating point numbers. It fails at this stage as it has no getters for red, green and blue." />
    <MESSAGE value="I rewrote the test method createColourTest() it now uses assertTrue to find out if the boolean values are within the range of 0.0 and 1.0." />
    <MESSAGE value="After creating a Colour constructor for my Colour.java class with the parameters red, green, and blue. I coded getters which are used in the test class to make sure that the float values for the colours stay within range. This test passed after the previous one failing." />
    <MESSAGE value="I have created a new instance for the whole combined colour constructor that is yet to be created. A small test that checks if the floating point number representing the whole colour is within the appropriate range. It fails I must next develop and implementation to satisfy it." />
    <MESSAGE value="I now test the second constructor verifying that it its parameter is hex and of the correct length. Whether the red, green and, blue values are appropriate. I am yet to construct the comparison function." />
    <MESSAGE value="I create a map to store the rgb values which a represented by integers between 0 and 255. The floating point values multiplied by 255 give the rgb values. I tested this assuming the hashmap would not be empty, and it would have a collection of size 3." />
    <MESSAGE value="All my tests passed, so I created red green and blue variables with in second constructor that allow me to compare colour objects. By taking breaking the hex up into its individual components red, green, and blue. I was able to get the int version and then divide by 255 since that is the maximum rgb value.&#10;This continued to use my previous tests. I went about refactoring." />
    <MESSAGE value="A test for the equals operator has failed.&#10;This establishes whether objects are equal or not based on the values red, green, and blue.&#10;I will go about creating the equals overloader now." />
    <MESSAGE value="Now my test passes as I created and equals Override to compare individual colours in my different instances. I will now refactor my code." />
    <MESSAGE value="I have refactored my code to have the getters directly beneath my constructors. As logically they are used by my methods beneath them." />
    <MESSAGE value="I refactored the file system so that there was no test file for Main as it wasn't necessary. Main is not tested since it is currently only calling the single RGBColour method." />
    <MESSAGE value="I refactored teh comments in the Colour.java file as all tests pass with 100% code coverage of the Colour class. In my java docs I gave the input type." />
    <MESSAGE value="I refactored my code so that in ColoursTest.java there was no tearDown() method. As it was not being used in the code. I also altered the comments for the setUp() method to include two instances." />
    <MESSAGE value="During refactoring I realized that one of my test which was a repeat of the first constructor test was redundant. Since I test all getters for the second constructor already. I removed it and found no loss in code coverage." />
    <option name="LAST_COMMIT_MESSAGE" value="During refactoring I realized that one of my test which was a repeat of the first constructor test was redundant. Since I test all getters for the second constructor already. I removed it and found no loss in code coverage." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/CS3318_AO3$ColoursTest.ic" NAME="ColoursTest Coverage Results" MODIFIED="1669805705884" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>org.example.*</FILTER>
    </SUITE>
  </component>
</project>